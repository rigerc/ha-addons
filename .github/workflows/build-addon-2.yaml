---
name: Builder 2

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
    inputs:
      slug:
        description: Overrides the detected slug
        required: false
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  information:
    name: Gather add-on information
    runs-on: ubuntu-latest
    outputs:
      architectures: ${{ steps.information.outputs.architectures }}
      base_image_signer: ${{ steps.information.outputs.codenotary_base_image }}
      build: ${{ steps.information.outputs.build }}
      description: ${{ steps.information.outputs.description }}
      name: ${{ steps.information.outputs.name }}
      slug: ${{ steps.override.outputs.slug }}
      target: ${{ steps.information.outputs.target }}
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v4
        with:
            sparse-checkout: ${{ needs.information.outputs.slug }}
      - name: üöÄ Run add-on information action
        id: information
        uses: frenck/action-addon-information@v1.4.2
        with:
          path: "./${{ inputs.slug }}"
      - name: üöÄ Process possible slug override
        id: override
        run: |
          slug="${{ steps.information.outputs.slug }}"
          if [[ ! -z "${{ inputs.slug }}" ]]; then
            slug="${{ inputs.slug }}"
          fi
          echo "slug=$slug" >> "$GITHUB_OUTPUT"

  lint-addon:
    name: Lint Add-on
    needs:
      - information
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v4
        with:
            sparse-checkout: ${{ needs.information.outputs.slug }}
      - name: üöÄ Run Add-on Lint
        uses: frenck/action-addon-linter@v2.18.0
        with:
          community: false
          path: "./${{ needs.information.outputs.slug }}/"

  lint-hadolint:
    name: Hadolint
    needs:
      - information
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v4
        with:
            sparse-checkout: ${{ needs.information.outputs.slug }}
      - name: üöÄ Run Hadolint
        uses: brpaz/hadolint-action@v1.5.0
        with:
          dockerfile: "./${{ needs.information.outputs.slug }}/Dockerfile"

  lint-json:
    name: JSON Lint
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v4
        with:
            sparse-checkout: ${{ needs.information.outputs.slug }}
      - name: üöÄ Run JQ
        run: |
          shopt -s globstar
          cat ${{ needs.information.outputs.target }}/*.json | jq '.'

  lint-shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v4
        with:
            sparse-checkout: ${{ needs.information.outputs.slug }}
      - name: üöÄ Run Shellcheck
        uses: ludeeus/action-shellcheck@2.0.0
        env:
          SHELLCHECK_OPTS: -s bash

  build:
    name: Build ${{ needs.information.outputs.target }}
    needs:
      - information
      - lint-addon
      - lint-hadolint
      - lint-json
    runs-on: ${{ contains(fromJson('["armhf", "armv7", "aarch64"]'), matrix.architecture) && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}
    strategy:
      matrix:
        architecture: ${{ fromJson(needs.information.outputs.architectures) }}
    steps:
      - name: Build ${{ matrix.architecture }}
        uses: home-assistant/builder@2025.03.0
        with:
          args: |
            --${{ matrix.architecture }} \
            -- test \
            --target /data/${{ needs.information.outputs.target }} \
            --image "${{ needs.information.outputs.image }}" \
            --docker-hub "ghcr.io/${{ github.repository_owner }}" \
            --addon
