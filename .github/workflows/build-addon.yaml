name: Builder

on:
  workflow_dispatch:
    inputs:
      addon:
        description: 'Add-on to build (leave empty to detect changes)'
        required: false
        type: string
      debug_no_build: # New input for debug mode
        description: 'Run without actual building (for debugging purposes)'
        required: false
        type: boolean
        default: false # Default to false, meaning it will build by default
  push:
    branches:
      - main # Or your default branch, e.g., master
    paths:
      - '**/config.json'
jobs:
  check-addon-changes:
    runs-on: ubuntu-latest
    outputs:
      changedAddons: ${{ steps.set-addons.outputs.addons }}
    steps:
      - name: ↩️ Checkout
        uses: actions/checkout@v4
      - name: Set add-ons to build
        id: set-addons
        run: |
          if [ -n "${{ github.event.inputs.addon }}" ]; then
            # Use manually specified add-on
            echo "addons=[\"${{ github.event.inputs.addon }}\"]" >> $GITHUB_OUTPUT
          else
            # Detect changed files
            changed_dirs=$(find . -maxdepth 1 -type d -not -path "*/\.*" -not -path "." | sed 's|^\./||' | jq -R -s -c 'split("\n") | map(select(length > 0))')
            echo "addons=$changed_dirs" >> $GITHUB_OUTPUT
          fi

  lint_config:
    if: ${{ needs.check-addon-changes.outputs.changedAddons != '[]' }}
    needs: check-addon-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        addon: ${{ fromJSON(needs.check-addon-changes.outputs.changedAddons) }}
    steps:
      - name: ↩️ Checkout
        uses: actions/checkout@v4
      - name: 🔎 Run Home Assistant Add-on Lint
        uses: frenck/action-addon-linter@v2.18
        with:
          path: "./${{ matrix.addon }}"

  build:
    if: ${{ needs.check-addon-changes.outputs.changedAddons != '[]' }}
    needs: [check-addon-changes, lint_config]
    runs-on: ubuntu-latest
    name: Build ${{ matrix.arch }} ${{ matrix.addon }} add-on
    strategy:
      matrix:
        addon: ${{ fromJSON(needs.check-addon-changes.outputs.changedAddons) }}
        arch: ["aarch64", "amd64", "armv7"]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Get information
        id: info
        uses: home-assistant/actions/helpers/info@master
        with:
          path: "./${{ matrix.addon }}"

      - name: Check if add-on should be built
        id: check
        run: |
          if [[ "${{ steps.info.outputs.architectures }}" =~ ${{ matrix.arch }} ]]; then
             echo "build_arch=true" >> $GITHUB_OUTPUT
             echo "image=$(echo ${{ steps.info.outputs.image }} | cut -d'/' -f3)" >> $GITHUB_OUTPUT
          else
             echo "${{ matrix.arch }} is not a valid arch for ${{ matrix.addon }}, skipping build"
             echo "build_arch=false" >> $GITHUB_OUTPUT
          fi

      - name: Login to GitHub Container Registry
        # Modified if condition:
        # Only run if build_arch is true AND (it's not a workflow_dispatch OR debug_no_build is false)
        # Simpler: Only run if build_arch is true AND debug_no_build is not true (works for push too as inputs.debug_no_build will be null)
        if: steps.check.outputs.build_arch == 'true' && github.event.inputs.debug_no_build != true
        uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Display debug information (if debug_no_build is true)
        if: github.event.inputs.debug_no_build == 'true' && steps.check.outputs.build_arch == 'true'
        run: |
          echo "::notice title=Debug Mode Active::Build step for ${{ matrix.addon }} (${{ matrix.arch }}) would run with image ${{ steps.check.outputs.image }}."
          echo "Skipping actual build due to 'debug_no_build' option."

      - name: Build ${{ matrix.addon }} add-on
        # Modified if condition:
        if: steps.check.outputs.build_arch == 'true' && github.event.inputs.debug_no_build != 'true'
        uses: home-assistant/builder@2025.03.0
        with:
          args: |
            --${{ matrix.arch }} \
            --target /data/${{ matrix.addon }} \
            --image "${{ steps.check.outputs.image }}" \
            --docker-hub "ghcr.io/${{ github.repository_owner }}" \
            --addon
