---
name: Builder

on:
  workflow_dispatch:
    inputs:
      addon:
        description: 'Add-on to build (e.g., "my_addon_dir_name"). Leave empty to detect changes on push.'
        required: false
        type: string
  push:
    branches:
      - main # Or your default branch
    paths:
      - '**/config.json'

# Ensures that only one workflow run for the same group (branch or PR) runs at a time.
# If a new commit is pushed, the currently running workflow for that group will be cancelled.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read # To checkout the repository and read files
  packages: write # To push Docker images to GHCR

jobs:
  determine_changes:
    name: Determine Changed Add-ons
    runs-on: ubuntu-latest
    outputs:
      changed_addons: ${{ steps.set_addons.outputs.addons_json }} # Ensure this matches the step output name
      has_changes: ${{ steps.set_addons.outputs.addons_json != '[]' }}
    steps:
      - name: ‚Ü©Ô∏è Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history for all branches and tags.
          # Required for git diff on push events if github.event.before is not an immediate parent.
          fetch-depth: 0

      - name: Set add-ons to build
        id: set_addons
        run: |
          ADDONS_JSON="[]" # Default to empty JSON array
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ github.event.inputs.addon }}" ]; then
            echo "Manual trigger: Building specified add-on: ${{ github.event.inputs.addon }}"
            ADDONS_JSON="[\"${{ github.event.inputs.addon }}\"]"
          elif [ "${{ github.event_name }}" == "push" ]; then
            echo "Push trigger: Detecting changed add-ons..."
            # Get directories of config.json files changed in the push
            # github.event.before is the SHA before the push
            # github.event.after is the SHA after the push (same as github.sha for push)
            # The '|| true' handles the case where github.event.before is 000... (new branch)
            # or if no .json files were changed (though paths filter should catch this).
            changed_config_files=$(git diff --name-only "${{ github.event.before }}" "${{ github.event.after }}" -- '**/config.json' || true)

            if [ -n "$changed_config_files" ]; then
              # Extract directory names, ensure uniqueness, and format as JSON array
              # Assumes addon structure is 'addon_name/config.json'
              ADDONS_JSON=$(echo "$changed_config_files" | sed 's|/config\.json$||' | sed 's|^\./||' | sort -u | jq --raw-input --slurp --compact-output 'split("\n") | map(select(length > 0))')
              echo "Detected changed add-ons: $ADDONS_JSON"
            else
              echo "No config.json files changed in this push."
            fi
          else
            echo "No specific add-on provided and not a push event with config.json changes. Nothing to build."
          fi
          echo "addons_json=$ADDONS_JSON" >> "$GITHUB_OUTPUT"
        shell: bash

  lint_addons:
    name: Lint Add-on Configs
    runs-on: ubuntu-latest
    needs: determine_changes
    if: ${{ needs.determine_changes.outputs.has_changes == 'true' }}
    strategy:
      matrix:
        addon: ${{ fromJson(needs.determine_changes.outputs.changed_addons) }}
      fail-fast: false # Continue linting other addons even if one fails
    steps:
      - name: ‚Ü©Ô∏è Checkout repository
        uses: actions/checkout@v4

      - name: üîé Run Home Assistant Add-on Lint for ${{ matrix.addon }}
        uses: frenck/action-addon-linter@v2 # Pin to major version
        with:
          path: "./${{ matrix.addon }}"

  build_addons:
    name: Build ${{ matrix.arch }} / ${{ matrix.addon }}
    runs-on: ubuntu-latest
    needs: [determine_changes, lint_addons]
    # Run if there are changes AND linting passed (or was skipped because no changes)
    if: ${{ needs.determine_changes.outputs.has_changes == 'true' && needs.lint_addons.result != 'failure' && needs.lint_addons.result != 'cancelled' }}
    strategy:
      matrix:
        addon: ${{ fromJson(needs.determine_changes.outputs.changed_addons) }}
        arch: ["aarch64", "amd64", "armv7"]
      fail-fast: false # Continue building other addons/arches even if one fails

    steps:
      - name: ‚Ü©Ô∏è Checkout repository
        uses: actions/checkout@v4

      - name: ‚ÑπÔ∏è Get add-on information for ${{ matrix.addon }}
        id: info
        uses: home-assistant/actions/helpers/info@v1.3.0 # Pinned to a specific version
        with:
          path: "./${{ matrix.addon }}"

      - name: üßê Check if ${{ matrix.addon }} should be built for ${{ matrix.arch }}
        id: check_arch
        shell: bash
        run: |
          if [[ "${{ steps.info.outputs.architectures }}" =~ ${{ matrix.arch }} ]]; then
             echo "build_arch=true" >> $GITHUB_OUTPUT
             # Extract only the image name, not the full path, for the builder's --image flag
             IMAGE_NAME=$(echo "${{ steps.info.outputs.image }}" | awk -F'/' '{print $NF}')
             echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT
             echo "Building ${{ matrix.addon }} for ${{ matrix.arch }}."
          else
             echo "build_arch=false" >> $GITHUB_OUTPUT
             echo "${{ matrix.arch }} is not a valid architecture for ${{ matrix.addon }}. Skipping build for this arch."
          fi

      - name: üîí Login to GitHub Container Registry
        if: steps.check_arch.outputs.build_arch == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üõ†Ô∏è Build ${{ matrix.addon }} for ${{ matrix.arch }}
        if: steps.check_arch.outputs.build_arch == 'true'
        uses: home-assistant/builder@2025.03.0 # Kept user-provided version
        with:
          args: |
            --${{ matrix.arch }}
            --target "/data/${{ matrix.addon }}"
            --image "${{ steps.check_arch.outputs.image_name }}"
            --docker-hub "ghcr.io/${{ github.repository_owner }}"
            --addon
